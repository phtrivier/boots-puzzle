* Game Engine
** TODO Images from plugins in editor and UI
   Find a way for the editor and the UI to locate imgs that are in plugins / core in
   a relativerly elegant way (not everything is in 'core' ... maybe the plugin system can
   help locate images (and I add 'core' to the 'core' images ?)
** TODO [#B] Add the adventure system
*** TODO An adventure references plugins and levels
*** TODO A level references puzzle and story
** TODO [#B] Make it possible to play an adventure
*** TODO Load the adventure, all plugins, play the first level
*** TODO When you reach the end of a level, go to next level
*** TODO When you reach the end of an adventure, have a nice thing happen !!
** TODO [#LATER] Introduce the notion of 'initializer'
*** TODO method 'def_identifier(:named_cells) ==> definit une method named_cells qui :
*** prend un block, et rajoute une methode 'init_named_cells' qui appelle ce block
*** reference l'initializer dans la classe (ajoute une liste Ã  la classe, ie une variable globale sur la classe elle meme, avec un set_instance_variable, au besoin ... )
*** Note : ca a l'air vraiment trop dur, et pas forcement indispensable ; pour l'instant
*** je laisse les initializeur ecrits "a la pogne" (ca va finir en gros eval, non?), et je ne fais
*** que referencer la liste des methodes d'init a appeller ...
*** DONE dans le constructeur, appeller tous les initializer dans l'ordre
*** DONE transformer la creation des named_cells en initialiseur
*** DONE transformer le placement des boots en initialiseur
*** DONE changer la syntaxe des rows et transformer la creation des cases en un initializeur
*** DONE changer la sauvegarde des rows (pour faire apparaitre rows do ...)

** TODO Add quotes associated to a level (displayed between levels)
* Game UI
** Add a background around the UI
** Make the UI exstensible (addition to the plug-in system)
* Puzzle Editor
** TODO Fix the place where images are loaded from (not necessarily the core !)
** TODO [#B] Adventure system
*** TODO Load an adventure file
**** Adventure editing
***** TODO Create an adventure : ask puzzle dimensions, name, file_name
***** TODO Add / Remove levels (ask Puzzle and story file / name ?)
***** TODO Add / remove required plugins
***** TODO Indicate the location of plugins ? (using adventures / plugins by default ...)
**** Level editing
***** TODO link a level to a story and a puzzle
***** TODO edit the puzzle
*** TODO [#B] Load the tools from all plugins in an adventure
** TODO [#D] Undo ?
** TODO [#D] Continuous saving
*** Save puzzle in a temp file every 10 secs ; when you save it, simply rename the draft to the final file
** TODO Externalize strings (good exercise :))
** TODO Add a tool to set the quote for a puzzle
* Plugins
** TODO swimming : water cells, palms
** TODO burning
** TODO chess moves
** TODO wall breaker
** TODO purely decorative plugin (with funny kinds of walls, etc...)
** TODO tunnel plugin (move from a place to another)
* Test Editor
** recording
** adding assertions
** saving / loading
* Scenario, Game, Ideas ...
* General
** TODO Use the gosu lib from the system if it exists (installed through gem?)
** TODO Build an installer for shoes app ?
** TODO Distribute as a gem ?
** TODO inline help
* Misc
** TODO Have rake run the editor => Not possible at the moment (Baaaad shoes)
** TODO [#B] Serious Logging (for now, it is silly)(log4r ...)
** TODO Mode emacs pour creer un nouveau fichier en me demandant le nom, et la description, et qui ajoute le nom
** , le bandeau, et la declaration de la classe (je suis un feignasse)
** test coverage tools ?

