* Bugs
** TODO [BP-0] Log4j had to be disabled as it breaks the
* Game Engine
** TODO [#A] Make it easier to define boots
Boots.for(Palms) do
  reachable do |puzzle, i,j|
    walkable?(puzzle, i,j) || puzzle.cell(i,j).swimmable?
  end
  img "palms.png"
end

Boots.for(ChessKnightBoots) do
  next_position do
    # Here the code to return things
  end
  img "knight.png"
end

Try and reuse as many code as possible from what was done with the Cells
(guessing the names if possible, provide the class, turn all methods into instances method, etc...)
** TODO [#A] Make it easier to define boots tools
BootsTool.for(Palms)
[defines and register a PalmsBootsTool tools that set boots to be Palms ... gne he !)
Should not need much more than this ...
** TODO Make it easier to define a new property on cells (such as 'burnable', walkable, etc...)
==> cell_property :walkable true
(defines the method that return true on walkable?, but also a class method to change it ... !!!)
** TODO [#B] Add quotes associated to a level (displayed between levels)
* Game UI
** [#F] Make the UI exstensible (addition to the plug-in system)
* Puzzle Editor
** TODO [#C] Undo ?
** TODO [#C] Continuous saving
*** Save puzzle in a temp file every 10 secs ; when you save it, simply rename the draft to the final file
** TODO Externalize strings (good exercise :))
** TODO Add a tool to set the quote for a puzzle
* Plugins
** TODO swimming : water cells, palms
*** DONE Palms
*** DONE Define cells as 'swimmable' (and let the player walk on it only if it wears waterproof boots)
*** TODO Fix the palms icon (add transparency, ... find something nicer)
*** TODO Simplify the boots and boots tool definition)
** TODO burning
   (Same as swimming, but with burning stuff, and you need shoes that are )
** TODO chess moves
** TODO wall breaker
** TODO purely decorative plugin (with funny kinds of walls, etc...)
** TODO tunnel plugin (move from a place to another)
*** TODO Rename TunnelExtremityCell to TunnelCell
*** TODO Add a tool that changes the class of the cell to TunnelCell, and name the cell if possible
* Test Editor
** recording
** adding assertions
** saving / loading
* General
** TODO Use the gosu lib from the system if it exists (installed through gem?)
- try installing trough gem before building the executable ...
- then remove the lib and run the thing
** TODO Build an installer for shoes app ?
** TODO Distribute as a gem / an executable ?
See http://www.erikveen.dds.nl/distributingrubyapplications/#3.0.0
(or anything better ... how does shoes get distributed ?)
** TODO [#B] Documentation
** Adventure format
** Puzzle format
** Plugin system
** TODO set up a bug tracker (or move to bazaar and launchpad ?)
* Misc
** TODO Improve Logging (how to log into rake tests ?)
** test coverage tools ?
