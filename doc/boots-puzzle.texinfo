\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename boots-puzzle.info
@settitle The Boots Puzzle Language
@c %**end of header

@c copyright info
@copying
This is the manual for the Boots Puzzle language.

Copyright @copyright{} 2008 Pierre-Henri Trivier.
@end copying

@c title page
@titlepage
@title The Boots Puzzle Language
@subtitle Does anybody know Boots ?
@author Pierre-Henri Trivier

@c copyright page
@page
@vskip 0pt plus 1fill
@insertcopying
@end titlepage

@c table of contents
@contents

@c -------------------------------

@c top node
@ifnottex
@node Top, Introduction, (dir), (dir)
@top The Boots Puzzle Language

This is the manual for the Boots Puzzle language.
@end ifnottex

@c Navigation menu
@menu
* Introduction::                What's this manual ?
* Adventures::                  Creating an adventure.
* Levels::                      What levels are, and why you should'nt really care.
* Puzzle::                      What puzzles are, and why you have to care.
* Cells::                       Those things you walk on. Or not.
* Boots::                       Those things you walk with. Or not.
* Story::                       Make things happen in your puzzles.
* Plugins::                     Extend the Boots Puzzle game.
* Index::                       Complete index

@detailmenu
 --- The Detailed Node Listing ---

Introduction

* Who's this for ?::
* Running Boots Puzzle::

Adventures

* Creating an adventure::
* adventure.yml file::

Plugin

* Notorious plugins::

Notorious plugins

* Water::

@end detailmenu
@end menu

@c ------------------------
@c Body of the document

@node Introduction, Adventures, Top, Top
@chapter Introduction
@comment  node-name,  next,  previous,  up

This is the manual for the Boots Puzzle Language, a short ruby-based DSL
to make reflexion games.

@menu
* Who's this for ?::
* Running Boots Puzzle::
@end menu

@node Who's this for ?, Running Boots Puzzle, Introduction, Introduction
@comment  node-name,  next,  previous,  up
@section Who's this for ?

This is a manual for people who want to create adventures playable
with the @command{boots-puzzle} 'Engine'.  If you want to play a game
based on Boots Puzzle (there should be some one day ;) ), please refer
to the manual of the game itself.

I will assume you are running a variant of GNU/Linux. If you try this
on an Apple(tm) computer or on a PC with Microsoft(tm) Windows, well,
I cannot blame you, but I don't guarantee anything.

This reminds me that I can't guarantee a lot for you if you run
GNU/Linux ; I've only tried this on my x486 compatible running Ubuntu
Hardy Heron.

I will assume that you have some knowledge of the
@url{http://ruby-lang.org, Ruby programming language}.  In my humble
opinion, you should.

Ruby rocks. Go learn it.

No, wait ; actually, don't go learn it, and let me show you how YOU
can extend my app and create your own puzzle, writting ruby code
without even realizing it.

There is plenty of documentation available for ruby on the Internet,
otherwise. You might want to start with @cite{Why's (Poignant) Guide
to Ruby}, which you can freely grab
@url{http://poignantguide.net/ruby/, here}.  This is a very funny
book, whith lots of drawings and jokes.

Being a terrible drawer, the author of this manual will try to provide
you with your fair share of jokes.

Have fun.

@node Running Boots Puzzle,  , Who's this for ?, Introduction
@section Running Boots Puzzle

You'll need the latest sources of the @command{boots-puzzle} project.
You should be able to get it from
@url{git://github.com/phtrivier/boots-puzzle.git}.  You will need to
install the @command{git} program first --- see
@url{http://git.or.cz/, Git home page}.

Once you have grabbed the sources, there should be a folder with the following structure :

@itemize
@item
Rakefile
@item
src
@itemize @minus
@item
adventures
@itemize @minus
@item
foobar
@end itemize
@item
editor
@item
gui
@item
plugins
@item
test
@end itemize
@end itemize

In particular, there should be an example of an adventure in the
@file{src/adventures/foobar} folder.

To run an adventure, you will need some ruby packages (most of them available by @command{rubygem}).

@itemize
@item
@command{rake}, a ruby version of @command{make}, used to run other tasks
@item
@command{mocha}, a ruby Mocking framwork, used in tests cases
@end itemize

Still there ? Whao, you're not afraid by my lists. Okay, so adventures should be in folders under the @file{src/adventures} folder. For example, 'foobar' is the name of an adventure, so the adventure (that is, all file necessary to describe the adventure) should be in @file{src/adventures/foobar}.

To run the adventure, go to the folder just above the @file{src} folder (you should see file @file{Rakefile}). Rake task @command{play} is used to play and adventure. To play adventure foobar, type :

@example
rake play --adventure=foobar
@end example

Later, we will create and adventure called 'donjon'. To play it, you will type :

@example
rake play --adventure=donjon
@end example

If you forget the adventure name, you will automatically play adventure foobar.

You'll see in a moment that an adventure is made of levels. If you
know the name of a level in an adventure, you can go directly to this
level. For example, to go directly to level called 'level_2' in adventure foobar :

@example
rake play --adventure=foobar --level=level_2
@end example

You can get more information about how to invoke @command{rake play} by calling @command{rake help}.

@node Adventures, Levels, Introduction, Top
@chapter Adventures

@quotation
``A l'aventure compagnon, je suis parti vers l'horizon,
J'aurais mieux fait de rester au lit, ce donjon il est pourri''

@cite{Donjon de Naheulbeuk}, @url{http://www.penofchaos.com}
@end quotation

A Boots Puzzle adventure is a whole new world of traps, strange places, events, smelly boots and, maybe, fame and fortune.

Or you might also see it as a bunch of ruby files to describe the levels, and a YAML file to order the levels. That would just be a bit less poetic.

@menu
* Creating an adventure::
* adventure.yml file::
@end menu

@node Creating an adventure, adventure.yml file, Adventures, Adventures
@section Creating an adventure

To create a brand new adventure, first create a folder under @file{src/adventures}, and create and edit a file called @file{adventure.yml} in this folder :

@example
mkdir src/adventures/donjon
emacs src/adventures/donjon/adventure.yml
@end example

You don't necessarily have to use emacs, of course, it's just an advice. If you are really lazy, you can copy the @file{adventure.yml} file from @file{foobar}, and edit it. Just remenber : @file{adventures} is the folder with, well, adventures, and @file{adventure.yml} is only the description of @emph{one} adventure. Grammar and everything.

@node adventure.yml file,  , Creating an adventure, Adventures
@section adventure.yml file

Enough talking already. Here is an example of an adventure file for our adventure.

@example
adventure:
  plugins:
  - water
  - tunnel
  prefix: src/adventures/foobar/levels
  name: foobar
  levels:
  - name: Level1Puzzle
    puzzle: level_1_puzzle.rb
  - name: Level2Puzzle
    puzzle: level_2_puzzle.rb
  - name: Level3Puzzle
    puzzle: level_3_puzzle.rb
@end example

TODO : Describe everything !!

@node Levels, Puzzle, Adventures, Top
@chapter Levels

A level is a puzzle (where things are) and a story (what things happen).
etc...

@node Puzzle, Cells, Levels, Top
@chapter Puzzle
@comment  node-name,  next,  previous,  up

A puzzle is a lot of places (cells), an entry, an exit, and boots scatered all around the place.

@node Cells, Boots, Puzzle, Top
@chapter Cells
@comment  node-name,  next,  previous,  up

@node Boots, Story, Cells, Top
@chapter Boots
@comment  node-name,  next,  previous,  up

@node Story, Plugins, Boots, Top
@chapter Story
@comment  node-name,  next,  previous,  up

@node Plugins, Index, Story, Top
@chapter Plugin
@comment  node-name,  next,  previous,  up

@menu
* Notorious plugins::
@end menu

@node Notorious plugins,  , Plugins, Plugins
@section  Notorious plugins
@comment  node-name,  next,  previous,  up


@menu
* Water::
@end menu

@node Water,  , Notorious plugins, Notorious plugins
@subsection Water
@comment  node-name,  next,  previous,  up



@c ----------------------------------
@c End of the document
@node Index,  , Plugins, Top
@unnumbered Index

@printindex cp

@bye

